<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div>detail !!</div>
    <div>
        <h1>선택한 board info</h1>
        <div>
            제목 : <%=board.board_title%>
        </div>
        <div>
            내용 : <%=board.board_contents%>
        </div>
        <div>
            공개 : <%=board.board_access%>
        </div>
        <div>
            카테고리 :
            <%board.board_category.map((category) => {%>
            <%=category%>
            <%})%>
        </div>
        <div>
            포인트 : <%=board.board_point%>
        </div>
        <div>
            이미지 :
            <%board.board_img.map((img) => {%>
            <%=img%>
            <%})%>
        </div>
        <div>
            작성자 : <%=board.writer_id%>
        </div>
        <div>
            생성날짜 : <%=board.create_time%>
        </div>
        <div>
            채택여부 : <%=board.status%>
        </div>
        <div>
            조회수 : <%=board.views%>
        </div>
        <br/>
        <br/>
        <h1>answer</h1>
        <h2><%=board.answers.length%>개 answer 존재</h2>
        <%board.answers.map((answer, index) => { %>
            <div>
                <hr/>
                <h2><%=index + 1%> 번째 answer</h2>
                <div>
                    답변 작성자 : <%=answer.user_id%>
                </div>
                <div>
                    답변 내용 : <%=answer.answer_contents%>
                </div>
                <div>
                    답변 생성날짜 : <%=answer.answer_create_time%>
                </div>
                <button onclick=selectAnswerOne(`<%=board._id%>`,`<%=answer._id%>`)>answer 가져오기</button>
                <br/>
                <button onclick=deleteAnswerOne(`<%=board._id%>`,`<%=answer._id%>`)>answer 삭제</button>
                <br/>
                <div>
                    <h3>--<%=answer.comments.length%> 개 댓글 존재--</h3>
                    <%answer.comments.map((comment, index) => { %>
                        <div>
                            <h3><%=index + 1%> 번째 댓글</h3>
                            <div>
                                댓글 작성자 : <%=comment.user_id%>
                            </div>
                            <div>
                                댓글 내용 : <%=comment.comment_contents%>
                            </div>
                            <div>
                                댓글 생성날짜 : <%=comment.comment_create_time%>
                            </div>
                            <button onclick=selectCommentOne(`<%=board._id%>`,`<%=answer._id%>`,`<%=comment._id%>`)>comment 가져오기</button>
                            <br/>
                            <button onclick=deleteCommentOne(`<%=board._id%>`,`<%=answer._id%>`,`<%=comment._id%>`)>comment 삭제</button>
                        </div>
                    <%})%>
                    <h3>-- 댓글 추가--</h3>
                    <div>
                        <div>
                            내용 :
                            <input class="contents2_<%=answer._id%>" type="text" placeholder="내용"/>
                        </div>
                        <div>
                            작성자
                            <input class="user_id2_<%=answer._id%>" type="text" placeholder="작성자 아이디">
                        </div>
                        <button onclick=addComment(`<%=board._id%>`,`<%=answer._id%>`)>comment 추가</button>
                    </div>
                </div>
                <hr/>
            </div>

        <%})%>
    </div>
    <br />
    <br />
    <br />
    <br />
    <hr/>
    <hr/>
    <div>
        <h1>answer 추가</h1>
        <div>
            내용 :
            <input class="contents" type="text" placeholder="내용"/>
        </div>
        <div>
            작성자
            <input class="user_id" type="text" placeholder="작성자 아이디">
        </div>
    </div>
    <button onclick=addAnswer(`<%=board._id%>`)>answer 추가</button>
</body>
</html>

<script defer>
    const addAnswer = async (id) => {
        const user_id = document.querySelector(".user_id").value;
        const answer_contents = document.querySelector(".contents").value;
        const res = await fetch(`/board/add-answer/${id}`, {
            method: 'put',
            headers: {
                'Content-type': 'application/json'
            },
            body: JSON.stringify({
                user_id,
                answer_contents,
            }),
        });
        if(res.status===200){
            alert("생성 완료");
            location.reload();

        }else if(res.status === 400){
            alert("생성 실패");
            location.reload();
        }else if(res.status===500){
            alert("오류 발생");
            location.reload();
        }

    }

    const selectAnswerOne = async (board_id, answer_id) => {
        const res = await fetch(`/board/select-answer/${board_id}/${answer_id}`, {
            method : 'get',
            headers: {
                'Content-type': 'application/json'
            },
        })
    }

    const deleteAnswerOne = async (board_id, answer_id) => {
        const res = await fetch(`/board/delete-answer/${board_id}/${answer_id}`, {
            method : 'put',
            headers: {
                'Content-type': 'application/json'
            },
        })

        if(res.status === 200){
            alert("answer 삭제완료");
            location.reload();
        }else if(res.status === 400){
            alert("answer 삭제실패");
            location.reload();
        }else{
            alert("오류요");
            location.reload();
        }
    }
    const addComment = async (board_id, answer_id) => {
        const user_id = document.querySelector(`.user_id2_${answer_id}`).value;
        const comment_contents = document.querySelector(`.contents2_${answer_id}`).value;
        const res = await fetch(`/board/add-comment/${board_id}/${answer_id}`, {
            method: 'put',
            headers: {
                'Content-type': 'application/json'
            },
            body: JSON.stringify({
                user_id,
                comment_contents,
            }),
        });
        if(res.status===200){
            alert("생성 완료");
            location.reload();

        }else if(res.status === 400){
            alert("생성 실패");
            location.reload();
        }else if(res.status===500){
            alert("오류 발생");
            location.reload();
        }

    }

    const selectCommentOne = async (board_id, answer_id, comment_id) => {
        const res = await fetch(`/board/select-comment/${board_id}/${answer_id}/${comment_id}`, {
            method : 'get',
            headers: {
                'Content-type': 'application/json'
            },
        })
    }

    const deleteCommentOne = async (board_id, answer_id, comment_id) => {
        const res = await fetch(`/board/delete-comment/${board_id}/${answer_id}/${comment_id}`, {
            method : 'put',
            headers: {
                'Content-type': 'application/json'
            },
        })

        if(res.status===200){
            alert("삭제 완료");
            location.reload();
        }else if(res.status === 400){
            alert("삭제 실패");
            location.reload();
        }else if(res.status===500){
            alert("오류 발생");
            location.reload();
        }
    }

</script>